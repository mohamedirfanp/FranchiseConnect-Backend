// <auto-generated />
using System;
using ChatGRPCService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatGRPCService.Migrations
{
    [DbContext(typeof(FranchiseConnectContext))]
    [Migration("20230701185240_initial migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Biddo.Models.TimelineCommentModel", b =>
                {
                    b.Property<int>("TimelineCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("timeline_comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimelineCommentId"), 1L, 1);

                    b.Property<int>("ConversationId")
                        .HasColumnType("int");

                    b.Property<int>("FromId")
                        .HasColumnType("int")
                        .HasColumnName("from_id");

                    b.Property<string>("FromRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("from_role");

                    b.Property<int>("QueryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.HasKey("TimelineCommentId");

                    b.ToTable("TimelineCommentModel");
                });

            modelBuilder.Entity("ChatGRPCService.Models.ConversationModel", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("conversation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConversationId"), 1L, 1);

                    b.Property<int>("FranchiseeId")
                        .HasColumnType("int")
                        .HasColumnName("franchisee_id");

                    b.Property<string>("FranchiseeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("franchisee_name");

                    b.Property<string>("FranchisorFranchiseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("franchisor_franchise_name");

                    b.Property<int>("FranchisorId")
                        .HasColumnType("int")
                        .HasColumnName("franchisor_id");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit")
                        .HasColumnName("is_blocked");

                    b.HasKey("ConversationId");

                    b.ToTable("ConversationModel");
                });

            modelBuilder.Entity("ChatGRPCService.Models.QueryModel", b =>
                {
                    b.Property<int>("QueryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("query_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QueryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedId")
                        .HasColumnType("int");

                    b.Property<string>("QueryDesciption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("query_description");

                    b.Property<string>("QueryTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("query_title");

                    b.Property<string>("QueryType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("query_type");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("QueryId");

                    b.ToTable("QueryModel");
                });
#pragma warning restore 612, 618
        }
    }
}
